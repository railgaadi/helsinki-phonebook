{"version":3,"sources":["components/Display.js","components/Filter.js","components/Notification.js","components/Input.js","components/PersonForm.js","services/phonebook.js","App.js","index.js"],"names":["Display","name","number","id","handleDelete","onClick","Filter","handleFilter","onChange","Notification","message","notifStyle","backgroundColor","isFailure","border","borderRadius","padding","color","className","style","Input","value","PersonForm","handleFormSubmit","newName","setNewName","newNumber","setNewNumber","onSubmit","event","target","type","baseURL","axios","get","then","response","data","personObj","post","delete","updatedPerson","put","App","useState","filterPersons","setFilterPersons","setIsFailure","notifMessage","setNotifMessage","persons","setPersons","useEffect","phonebookService","initialPersons","window","confirm","setsMessage","isDuplicate","find","person","setTimeout","filterQuery","toUpperCase","filter","includes","foundPerson","preventDefault","map","catch","error","newPerson","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f131cd8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Display = ({ name, number, id, handleDelete }) => <li>{name}:{number} <button onClick={() => handleDelete(id, name)}>Delete</button> </li>\n\nexport default Display","import React from 'react'\n\nconst Filter = ({ handleFilter }) => <div>Filter by: <input onChange={handleFilter} /></div>\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message, isFailure }) => {\n    const notifStyle = {\n        backgroundColor: isFailure ? 'red' : 'green',\n        border: 'blue 2 solid',\n        borderRadius: '3',\n        padding: '5',\n        color: 'white'\n    }\n\n    if (message === null) return null\n    else return (\n        <div className='notification' style={notifStyle}>\n            <p>{message}</p>\n        </div>\n    )\n}\n\n\nexport default Notification","import React from 'react'\n\nconst Input = ({ value, onChange }) => <input value={value} onChange={onChange} />\n\nexport default Input","import React from 'react'\nimport Input from './Input'\n\nconst PersonForm = ({ handleFormSubmit, newName, setNewName, newNumber, setNewNumber }) => (\n    <form onSubmit={handleFormSubmit}>\n        <div>\n            name: <Input value={newName} onChange={event => setNewName(event.target.value)} />\n        number: <Input value={newNumber} onChange={event => setNewNumber(event.target.value)} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import axios from \"axios\";\nconst baseURL = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseURL);\n  return request.then((response) => response.data);\n};\n\nconst create = (personObj) => {\n  const request = axios.post(baseURL, personObj);\n  return request.then((response) => response.data);\n};\n\nconst deleteOne = (id) => {\n  return axios.delete(`${baseURL}/${id}`);\n};\n\nconst update = (id, updatedPerson) => {\n  const request = axios.put(`${baseURL}/${id}`, updatedPerson);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, deleteOne, update };\n","// Package\nimport React, { useState, useEffect } from \"react\";\n//Components\nimport Display from \"./components/Display\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport PersonForm from \"./components/PersonForm\";\n//Services\nimport phonebookService from \"./services/phonebook\";\n\nconst App = () => {\n  //State Variables\n  const [filterPersons, setFilterPersons] = useState([]);\n  const [isFailure, setIsFailure] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [notifMessage, setNotifMessage] = useState(null);\n  const [persons, setPersons] = useState([]);\n\n  //Initial Fetch\n  useEffect(() => {\n    phonebookService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n      setFilterPersons(initialPersons);\n    });\n  }, []);\n\n  //Add new person\n  const handleFormSubmit = (event) => {\n    const foundPerson = isDuplicate();\n    //Check if duplicate\n    if (foundPerson) {\n      event.preventDefault();\n      window.confirm(\n        `${newName} is already in the phonebook, replace old number with new number?`\n      );\n\n      //Update number if user wants to\n      const updatedPerson = { ...foundPerson, number: newNumber };\n      phonebookService\n        .update(foundPerson.id, updatedPerson)\n        .then((updatedPerson) => {\n          setsMessage(`Updated ${updatedPerson.name}`);\n          setPersons(\n            persons.map((person) =>\n              person.id !== foundPerson.id ? person : updatedPerson\n            )\n          );\n          setFilterPersons(\n            persons.map((person) =>\n              person.id !== foundPerson.id ? person : updatedPerson\n            )\n          );\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          setsMessage(`${updatedPerson.name} was deleted from server already`);\n          setIsFailure(true);\n        });\n      setNewName(\"\");\n    }\n\n    //Add new person if no duplicate\n    else {\n      event.preventDefault();\n      const personObj = { name: newName, number: newNumber };\n      phonebookService\n        .create(personObj)\n        .then((newPerson) => {\n          setsMessage(`Added ${newName}`);\n          setIsFailure(false);\n          setPersons(persons.concat(newPerson));\n          setFilterPersons(persons.concat(newPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          setsMessage(error.response.data.error);\n          setIsFailure(true);\n        });\n    }\n  };\n\n  //Deleting person\n  const handleDelete = (id, name) => {\n    window.confirm(`Delete ${name}?`);\n    phonebookService.deleteOne(id).then(() => {\n      phonebookService.getAll().then((response) => {\n        setPersons(response);\n        setFilterPersons(response);\n        setsMessage(`Deleted ${name}`);\n      });\n    });\n  };\n\n  //Dynamic filter based on user input\n  const handleFilter = (event) => {\n    const filterQuery = event.target.value.toUpperCase();\n    setFilterPersons(\n      persons.filter((person) =>\n        person.name.toUpperCase().includes(filterQuery)\n      )\n    );\n  };\n\n  //Function checking for duplicate\n  const isDuplicate = () => {\n    const foundPerson = persons.find((person) => person.name === newName);\n    return foundPerson;\n  };\n\n  //Function setting notification message\n  const setsMessage = (message) => {\n    setNotifMessage(message);\n    setTimeout(() => {\n      setNotifMessage(null);\n    }, 2000);\n  };\n\n  //Rendering app\n  return (\n    <div>\n      <Notification message={notifMessage} isFailure={isFailure} />\n      <h1>Filter</h1>\n      <Filter handleFilter={handleFilter} />\n      <h1>Phonebook</h1>\n      <PersonForm\n        handleFormSubmit={handleFormSubmit}\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n      />\n      <h1>Numbers</h1>\n      <ul>\n        {filterPersons.map((person) => (\n          <Display\n            key={person.id}\n            id={person.id}\n            name={person.name}\n            number={person.number}\n            handleDelete={handleDelete}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}